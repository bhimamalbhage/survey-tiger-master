{"version":3,"sources":["components/CreateSurvey.js","components/InputQuestion.js","components/FirstAnswer.js","components/ShowAllQuestion.js","components/TakeSurvey.js","components/Landing.js","App.js","serviceWorker.js","index.js"],"names":["CreateSurvey","props","style","color","InputQuestion","useState","question","setQuestion","answer","setAnswer","Fragment","InputGroup","className","Input","placeholder","onChange","e","target","value","class","marginTop","type","onClick","addquestion","remove","id","FirstAnswer","addsubanswer","ShowAllQuestion","data","map","i","size","marginLeft","answer1","Checkbox","label","answer2","answer3","answer4","Button","background","options","TakeSurvey","handlequestion","setState","state","multi1","addsecondanswer","option","submit","addthirdanswer","addforthanswer","update","temp","questions","push","selectedOption","callforsubmit","removeAnswerOption","undefined","handleChange","this","width","console","log","React","Component","Landing","height","margin","App","flag","setFlag","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.53b03ae1.chunk.js","sourcesContent":["import React from \"react\";\nimport PetsSharpIcon from \"@material-ui/icons/PetsSharp\";\n\nconst CreateSurvey = (props) => {\n  return (\n    <div>\n      <h1 style={{ color: \"#009966\" }}>\n        {\" \"}\n        <PetsSharpIcon /> Survey Tiger\n      </h1>\n    </div>\n  );\n};\nexport default CreateSurvey;\n","import React, { useState } from \"react\";\nimport \"./style.css\";\nimport { InputGroup, InputGroupAddon, InputGroupText, Input } from \"reactstrap\";\n\nconst InputQuestion = (props) => {\n  const [question, setQuestion] = useState(\"\");\n  const [answer, setAnswer] = useState(\"\");\n  return (\n    <React.Fragment>\n      <br />\n      <InputGroup>\n        {/* <InputGroupAddon addonType='prepend'>\n          <InputGroupText> ? </InputGroupText>\n        </InputGroupAddon> */}\n        <span className='btn'>?</span>\n        <Input\n          placeholder='Please Enter the Question'\n          onChange={(e) => setQuestion(e.target.value)}\n        />\n      </InputGroup>\n      <div class='bs-example' style={{ marginTop: \"20px\" }}>\n        <form>\n          <div class='col-sm-12'>\n            <div class='input-group'>\n              <input\n                type='text'\n                class='form-control'\n                placeholder='Answer'\n                onChange={(e) => setAnswer(e.target.value)}\n              />\n              <span\n                class='input-group-text btn'\n                onClick={(e) => props.addquestion(question, answer)}\n              >\n                {\" \"}\n                +{\" \"}\n              </span>\n              <span\n                class='input-group-text btn'\n                onClick={() => {\n                  props.remove(props.id);\n                }}\n              >\n                {\" \"}\n                -{\" \"}\n              </span>\n            </div>\n          </div>\n        </form>\n      </div>\n    </React.Fragment>\n  );\n};\n\nexport default InputQuestion;\n","import React, { useState } from \"react\";\nimport \"./style.css\";\nconst FirstAnswer = (props) => {\n  const [answer, setAnswer] = useState();\n  return (\n    <React.Fragment>\n      <div class='bs-example'>\n        <form>\n          <div class='col-sm-12'>\n            <div class='input-group'>\n              <input\n                type='text'\n                class='form-control'\n                placeholder='Answer'\n                onChange={(e) => setAnswer(e.target.value)}\n              />\n              <span\n                class='input-group-text btn'\n                onClick={(e) => {\n                  props.addsubanswer(answer);\n                }}\n              >\n                {\" \"}\n                +{\" \"}\n              </span>\n              <span\n                class='input-group-text btn'\n                onClick={() => {\n                  props.remove(props.id);\n                }}\n              >\n                {\" \"}\n                -{\" \"}\n              </span>\n            </div>\n          </div>\n        </form>\n      </div>\n    </React.Fragment>\n  );\n};\nexport default FirstAnswer;\n","import React from \"react\";\nimport { Checkbox } from \"semantic-ui-react\";\nimport { Button } from \"react-bootstrap\";\nimport \"./displayquestion.css\";\nconst ShowAllQuestion = (props) => {\n  return (\n    <div>\n      {props.data.map((i, data) => {\n        return (\n          <div className=\"display\">\n            <h2>{props.data[data].question}</h2>\n            <h4 size=\"lg\" style={{ marginLeft: \"0px\" }}>\n              {props.data[data].answer1 && (\n                <Checkbox label={props.data[data].answer1} />\n              )}\n            </h4>\n            <h4 size=\"lg\" style={{ marginLeft: \"0px\" }}>\n              {props.data[data].answer2 && (\n                <Checkbox label={props.data[data].answer2} />\n              )}\n            </h4>\n            <h4 size=\"lg\" style={{ marginLeft: \"0px\" }}>\n              {props.data[data].answer3 && (\n                <Checkbox label={props.data[data].answer3} />\n              )}\n            </h4>\n            <h4 size=\"lg\" style={{ marginLeft: \"0px\" }}>\n              {props.data[data].answer4 && (\n                <Checkbox label={props.data[data].answer4} />\n              )}\n            </h4>\n          </div>\n        );\n      })}\n      <Button style={{ background: \"red\" }}> Confirm </Button>\n    </div>\n  );\n};\nexport default ShowAllQuestion;\n","import React from \"react\";\nimport PetsSharpIcon from \"@material-ui/icons/PetsSharp\";\nimport Select from \"react-select\";\nimport InputQuestion from \"./InputQuestion\";\nimport FirstAnswer from \"./FirstAnswer\";\nimport ShowAllQuestion from \"./ShowAllQuestion\";\nimport { Button } from \"react-bootstrap\";\n\nconst options = [\n  { value: \"Multi\", label: \"Multi select\" },\n  { value: \"Single\", label: \"Single select\" },\n];\nclass TakeSurvey extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      selectedOption: null,\n      option: \"\",\n      multi1: {},\n      questions: [],\n      callforsubmit: 0,\n    };\n  }\n  handlequestion = (question, answer) => {\n    this.setState({\n      ...this.state,\n      multi1: {\n        question: question,\n        answer1: answer,\n        answer2: 1,\n      },\n    });\n  };\n  addsecondanswer = (answer) => {\n    if (this.state.option === \"Multi\") {\n      this.setState({\n        ...this.state,\n        multi1: {\n          ...this.state.multi1,\n          answer2: answer,\n          answer3: 1,\n        },\n      });\n    } else {\n      this.setState({\n        ...this.state,\n        multi1: {\n          ...this.state.multi1,\n          answer2: answer,\n          submit: 1,\n        },\n      });\n    }\n  };\n  addthirdanswer = (answer) => {\n    this.setState({\n      ...this.state,\n      multi1: {\n        ...this.state.multi1,\n        answer3: answer,\n        answer4: 1,\n      },\n    });\n  };\n  addforthanswer = (answer) => {\n    this.setState({\n      ...this.state,\n      multi1: {\n        ...this.state.multi1,\n        answer4: answer,\n        submit: 1,\n      },\n    });\n  };\n\n  update = () => {\n    const temp = this.state.questions;\n    temp.push(this.state.multi1);\n    this.setState({\n      selectedOption: null,\n      option: \"\",\n      multi1: {},\n      questions: temp,\n    });\n  };\n\n  callforsubmit = () => {\n    this.update();\n    this.setState({\n      ...this.state,\n      callforsubmit: 1,\n    });\n  };\n\n  removeAnswerOption = (answer) => {\n    if (answer === \"answer1\") {\n      this.setState({\n        ...this.state,\n        multi1: {\n          ...this.state.multi1,\n          answer1: undefined,\n        },\n      });\n    } else if (answer === \"answer2\") {\n      this.setState({\n        ...this.state,\n        multi1: {\n          ...this.state.multi1,\n          answer2: undefined,\n        },\n      });\n    } else if (answer === \"answer3\") {\n      this.setState({\n        ...this.state,\n        multi1: {\n          ...this.state.multi1,\n          answer3: undefined,\n        },\n      });\n    } else if (answer === \"answer4\") {\n      this.setState({\n        ...this.state,\n        multi1: {\n          ...this.state.multi1,\n          answer4: undefined,\n        },\n      });\n    }\n  };\n\n  handleChange = (selectedOption) => {\n    this.setState({\n      ...this.state,\n      selectedOption: selectedOption,\n      option: selectedOption.value,\n    });\n  };\n  render() {\n    const { selectedOption } = this.state;\n    return (\n      <React.Fragment>\n        <div>\n          <h1 style={{ color: \"#009966\" }}>\n            {\" \"}\n            <PetsSharpIcon /> Survey Tiger\n          </h1>\n          <Select\n            value={selectedOption}\n            onChange={this.handleChange}\n            options={options}\n            width='200px'\n          />\n        </div>\n\n        {this.state.callforsubmit === 1 ? (\n          <ShowAllQuestion data={this.state.questions} />\n        ) : (\n          <div>\n            {this.state.option !== \"\" && (\n              <InputQuestion\n                addquestion={this.handlequestion}\n                remove={this.removeAnswerOption}\n                id='answer2'\n              />\n            )}\n            {this.state.multi1.answer2 !== undefined && (\n              <FirstAnswer\n                addsubanswer={this.addsecondanswer}\n                remove={this.removeAnswerOption}\n                id='answer2'\n              />\n            )}\n            {this.state.multi1.answer3 !== undefined && (\n              <FirstAnswer\n                addsubanswer={this.addthirdanswer}\n                remove={this.removeAnswerOption}\n                id='answer3'\n              />\n            )}\n            {this.state.multi1.answer4 !== undefined && (\n              <FirstAnswer\n                addsubanswer={this.addforthanswer}\n                remove={this.removeAnswerOption}\n                id='answer4'\n              />\n            )}\n            {this.state.multi1.submit !== undefined && (\n              <Button\n                style={{ background: \"maroon\", color: \"#F5F5F5\" }}\n                onClick={() => this.update()}\n              >\n                {\" \"}\n                Add Question\n              </Button>\n            )}\n            {this.state.multi1.submit !== undefined && (\n              <Button\n                style={{ background: \"maroon\", color: \"#F5F5F5\" }}\n                onClick={() => this.callforsubmit()}\n              >\n                {\" \"}\n                Publish\n              </Button>\n            )}\n          </div>\n        )}\n        {console.log(this.state)}\n      </React.Fragment>\n    );\n  }\n}\nexport default TakeSurvey;\n","import React from \"react\";\nimport PetsSharpIcon from \"@material-ui/icons/PetsSharp\";\nimport Button from \"@material-ui/core/Button\";\n\nconst Landing = (props) => {\n  return (\n    <React.Fragment>\n      <h1 style={{ color: \"#009966\" }}>\n        {\" \"}\n        <PetsSharpIcon /> Survey Tiger\n      </h1>\n      <Button\n        style={{\n          background: \"brown\",\n          size: \"large\",\n          height: \"50px\",\n          margin: \"20px\",\n          color: \"#F5F5F5\",\n        }}\n        onClick={() => props.update(1)}\n      >\n        Create Servey\n      </Button>\n      <br />\n      <Button\n        style={{\n          background: \"brown\",\n          size: \"large\",\n          height: \"50px\",\n          margin: \"20px\",\n          color: \"#F5F5F5\",\n        }}\n        onClick={() => props.update(2)}\n      >\n        Take Servey\n      </Button>\n    </React.Fragment>\n  );\n};\nexport default Landing;\n","import React, { useState } from \"react\";\nimport \"./App.css\";\nimport CreateSurvey from \"./components/CreateSurvey\";\nimport TakeSurvey from \"./components/TakeSurvey\";\nimport Landing from \"./components/Landing\";\n\nfunction App() {\n  const [flag, setFlag] = useState(0);\n  const update = (value) => {\n    setFlag(value);\n  };\n  return (\n    <div className='App'>\n      <div>\n        {flag === 0 && <Landing update={update} />}\n        {flag === 2 && <CreateSurvey />}\n        {flag === 1 && <TakeSurvey />}\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}